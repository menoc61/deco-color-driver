{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useEffect, useState, useContext } from \"react\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { Courier } from \"../models\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext({});\n\nvar AuthContextProvider = function AuthContextProvider(_ref) {\n  var _authUser$attributes;\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      authUser = _useState2[0],\n      setAuthUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dbCourier = _useState4[0],\n      setDbCourier = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var sub = authUser == null ? void 0 : (_authUser$attributes = authUser.attributes) == null ? void 0 : _authUser$attributes.sub;\n  useEffect(function () {\n    Auth.currentAuthenticatedUser({\n      bypassCache: true\n    }).then(setAuthUser);\n  }, []);\n  useEffect(function () {\n    if (!sub) {\n      return;\n    }\n\n    DataStore.query(Courier, function (courier) {\n      return courier.sub(\"eq\", sub);\n    }).then(function (couriers) {\n      setDbCourier(couriers[0]);\n      setLoading(false);\n    });\n  }, [sub]);\n  useEffect(function () {\n    if (!dbCourier) {\n      return;\n    }\n\n    var subscription = DataStore.observe(Courier, dbCourier.id).subscribe(function (msg) {\n      if (msg.opType === \"UPDATE\") {\n        setDbCourier(msg.element);\n      }\n    });\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, [dbCourier]);\n  return _jsx(AuthContext.Provider, {\n    value: {\n      authUser: authUser,\n      dbCourier: dbCourier,\n      sub: sub,\n      setDbCourier: setDbCourier,\n      loading: loading\n    },\n    children: children\n  });\n};\n\nexport default AuthContextProvider;\nexport var useAuthContext = function useAuthContext() {\n  return useContext(AuthContext);\n};","map":{"version":3,"names":["createContext","useEffect","useState","useContext","Auth","DataStore","Courier","AuthContext","AuthContextProvider","children","authUser","setAuthUser","dbCourier","setDbCourier","loading","setLoading","sub","attributes","currentAuthenticatedUser","bypassCache","then","query","courier","couriers","subscription","observe","id","subscribe","msg","opType","element","unsubscribe","useAuthContext"],"sources":["C:/Users/MENO/Desktop/PROJECT/APP-DECO-COLOR/deco-color-driver/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useState, useContext } from \"react\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { Courier } from \"../models\";\n\nconst AuthContext = createContext({});\n\nconst AuthContextProvider = ({ children }) => {\n  const [authUser, setAuthUser] = useState(null);\n  const [dbCourier, setDbCourier] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const sub = authUser?.attributes?.sub;\n\n  useEffect(() => {\n    Auth.currentAuthenticatedUser({ bypassCache: true }).then(setAuthUser);\n  }, []);\n\n  useEffect(() => {\n    if (!sub) {\n      return;\n    }\n    DataStore.query(Courier, (courier) => courier.sub(\"eq\", sub)).then(\n      (couriers) => {\n        setDbCourier(couriers[0]);\n        setLoading(false);\n      }\n    );\n  }, [sub]);\n\n  useEffect(() => {\n    if (!dbCourier) {\n      return;\n    }\n    const subscription = DataStore.observe(Courier, dbCourier.id).subscribe(\n      (msg) => {\n        if (msg.opType === \"UPDATE\") {\n          setDbCourier(msg.element);\n        }\n      }\n    );\n    return () => subscription.unsubscribe();\n  }, [dbCourier]);\n\n  return (\n    <AuthContext.Provider\n      value={{ authUser, dbCourier, sub, setDbCourier, loading }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n\nexport const useAuthContext = () => useContext(AuthContext);\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,aAAhC;AACA,SAASC,OAAT;;AAEA,IAAMC,WAAW,GAAGP,aAAa,CAAC,EAAD,CAAjC;;AAEA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;EAAA;;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAC5C,gBAAgCP,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOQ,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAkCT,QAAQ,CAAC,IAAD,CAA1C;EAAA;EAAA,IAAOU,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAA8BX,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOY,OAAP;EAAA,IAAgBC,UAAhB;;EACA,IAAMC,GAAG,GAAGN,QAAH,4CAAGA,QAAQ,CAAEO,UAAb,qBAAG,qBAAsBD,GAAlC;EAEAf,SAAS,CAAC,YAAM;IACdG,IAAI,CAACc,wBAAL,CAA8B;MAAEC,WAAW,EAAE;IAAf,CAA9B,EAAqDC,IAArD,CAA0DT,WAA1D;EACD,CAFQ,EAEN,EAFM,CAAT;EAIAV,SAAS,CAAC,YAAM;IACd,IAAI,CAACe,GAAL,EAAU;MACR;IACD;;IACDX,SAAS,CAACgB,KAAV,CAAgBf,OAAhB,EAAyB,UAACgB,OAAD;MAAA,OAAaA,OAAO,CAACN,GAAR,CAAY,IAAZ,EAAkBA,GAAlB,CAAb;IAAA,CAAzB,EAA8DI,IAA9D,CACE,UAACG,QAAD,EAAc;MACZV,YAAY,CAACU,QAAQ,CAAC,CAAD,CAAT,CAAZ;MACAR,UAAU,CAAC,KAAD,CAAV;IACD,CAJH;EAMD,CAVQ,EAUN,CAACC,GAAD,CAVM,CAAT;EAYAf,SAAS,CAAC,YAAM;IACd,IAAI,CAACW,SAAL,EAAgB;MACd;IACD;;IACD,IAAMY,YAAY,GAAGnB,SAAS,CAACoB,OAAV,CAAkBnB,OAAlB,EAA2BM,SAAS,CAACc,EAArC,EAAyCC,SAAzC,CACnB,UAACC,GAAD,EAAS;MACP,IAAIA,GAAG,CAACC,MAAJ,KAAe,QAAnB,EAA6B;QAC3BhB,YAAY,CAACe,GAAG,CAACE,OAAL,CAAZ;MACD;IACF,CALkB,CAArB;IAOA,OAAO;MAAA,OAAMN,YAAY,CAACO,WAAb,EAAN;IAAA,CAAP;EACD,CAZQ,EAYN,CAACnB,SAAD,CAZM,CAAT;EAcA,OACE,KAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MAAEF,QAAQ,EAARA,QAAF;MAAYE,SAAS,EAATA,SAAZ;MAAuBI,GAAG,EAAHA,GAAvB;MAA4BH,YAAY,EAAZA,YAA5B;MAA0CC,OAAO,EAAPA;IAA1C,CADT;IAAA,UAGGL;EAHH,EADF;AAOD,CA3CD;;AA6CA,eAAeD,mBAAf;AAEA,OAAO,IAAMwB,cAAc,GAAG,SAAjBA,cAAiB;EAAA,OAAM7B,UAAU,CAACI,WAAD,CAAhB;AAAA,CAAvB"},"metadata":{},"sourceType":"module"}