{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createContext, useEffect, useState, useContext } from \"react\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { Courier, Order, User, OrderService } from \"../models\";\nimport { useAuthContext } from \"./AuthContext\";\nimport { set } from \"react-native-reanimated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar OrderContext = createContext({});\n\nvar OrderContextProvider = function OrderContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useAuthContext = useAuthContext(),\n      dbCourier = _useAuthContext.dbCourier;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      order = _useState2[0],\n      setOrder = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      services = _useState6[0],\n      setServicees = _useState6[1];\n\n  var fetchOrder = function fetchOrder(id) {\n    var fetchedOrder;\n    return _regeneratorRuntime.async(function fetchOrder$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (id) {\n              _context.next = 3;\n              break;\n            }\n\n            setOrder(null);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(DataStore.query(Order, id));\n\n          case 5:\n            fetchedOrder = _context.sent;\n            setOrder(fetchedOrder);\n            DataStore.query(User, fetchedOrder.userID).then(setUser);\n            DataStore.query(OrderService, function (od) {\n              return od.orderID(\"eq\", fetchedOrder.id);\n            }).then(setServicees);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (!order) {\n      return;\n    }\n\n    var subscription = DataStore.observe(Order, order.id).subscribe(function (_ref2) {\n      var opType = _ref2.opType,\n          element = _ref2.element;\n\n      if (opType === \"UPDATE\") {\n        fetchOrder(element.id);\n      }\n    });\n    return function () {\n      return subscription.unsubscribe();\n    };\n  }, [order == null ? void 0 : order.id]);\n\n  var acceptOrder = function acceptOrder() {\n    var updatedOrder;\n    return _regeneratorRuntime.async(function acceptOrder$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(DataStore.save(Order.copyOf(order, function (updated) {\n              updated.status = \"ACCEPTED\";\n              updated.Courier = dbCourier;\n            })));\n\n          case 2:\n            updatedOrder = _context2.sent;\n            setOrder(updatedOrder);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickUpOrder = function pickUpOrder() {\n    var updatedOrder;\n    return _regeneratorRuntime.async(function pickUpOrder$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(DataStore.save(Order.copyOf(order, function (updated) {\n              updated.status = \"PICKED_UP\";\n            })));\n\n          case 2:\n            updatedOrder = _context3.sent;\n            setOrder(updatedOrder);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var completeOrder = function completeOrder() {\n    var updatedOrder;\n    return _regeneratorRuntime.async(function completeOrder$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(DataStore.save(Order.copyOf(order, function (updated) {\n              updated.status = \"COMPLETED\";\n            })));\n\n          case 2:\n            updatedOrder = _context4.sent;\n            setOrder(updatedOrder);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(OrderContext.Provider, {\n    value: {\n      acceptOrder: acceptOrder,\n      order: order,\n      user: user,\n      services: services,\n      fetchOrder: fetchOrder,\n      pickUpOrder: pickUpOrder,\n      completeOrder: completeOrder\n    },\n    children: children\n  });\n};\n\nexport default OrderContextProvider;\nexport var useOrderContext = function useOrderContext() {\n  return useContext(OrderContext);\n};","map":{"version":3,"names":["createContext","useEffect","useState","useContext","Auth","DataStore","Courier","Order","User","OrderService","useAuthContext","set","OrderContext","OrderContextProvider","children","dbCourier","order","setOrder","user","setUser","services","setServicees","fetchOrder","id","query","fetchedOrder","userID","then","od","orderID","subscription","observe","subscribe","opType","element","unsubscribe","acceptOrder","save","copyOf","updated","status","updatedOrder","pickUpOrder","completeOrder","useOrderContext"],"sources":["C:/Users/MENO/Desktop/PROJECT/APP-DECO-COLOR/deco-color-driver/src/contexts/OrderContext.js"],"sourcesContent":["import { createContext, useEffect, useState, useContext } from \"react\";\nimport { Auth, DataStore } from \"aws-amplify\";\nimport { Courier, Order, User, OrderService } from \"../models\";\nimport { useAuthContext } from \"./AuthContext\";\nimport { set } from \"react-native-reanimated\";\n\nconst OrderContext = createContext({});\n\nconst OrderContextProvider = ({ children }) => {\n  const { dbCourier } = useAuthContext();\n  const [order, setOrder] = useState();\n  const [user, setUser] = useState();\n  const [services, setServicees] = useState();\n\n  const fetchOrder = async (id) => {\n    if (!id) {\n      setOrder(null);\n      return;\n    }\n    const fetchedOrder = await DataStore.query(Order, id);\n    setOrder(fetchedOrder);\n\n    DataStore.query(User, fetchedOrder.userID).then(setUser);\n\n    DataStore.query(OrderService, (od) => od.orderID(\"eq\", fetchedOrder.id)).then(\n      setServicees\n    );\n  };\n\n  useEffect(() => {\n    if (!order) {\n      return;\n    }\n\n    const subscription = DataStore.observe(Order, order.id).subscribe(\n      ({ opType, element }) => {\n        if (opType === \"UPDATE\") {\n          fetchOrder(element.id);\n        }\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, [order?.id]);\n\n  const acceptOrder = async () => {\n    // update the order, and change status, and assign the courier\n    const updatedOrder = await DataStore.save(\n      Order.copyOf(order, (updated) => {\n        updated.status = \"ACCEPTED\";\n        updated.Courier = dbCourier;\n      })\n    );\n    setOrder(updatedOrder);\n  };\n\n  const pickUpOrder = async () => {\n    // update the order, and change status, and assign the courier\n    const updatedOrder = await DataStore.save(\n      Order.copyOf(order, (updated) => {\n        updated.status = \"PICKED_UP\";\n      })\n    );\n    setOrder(updatedOrder);\n  };\n\n  const completeOrder = async () => {\n    // update the order, and change status, and assign the courier\n    const updatedOrder = await DataStore.save(\n      Order.copyOf(order, (updated) => {\n        updated.status = \"COMPLETED\";\n      })\n    );\n    setOrder(updatedOrder);\n  };\n\n  return (\n    <OrderContext.Provider\n      value={{\n        acceptOrder,\n        order,\n        user,\n        services,\n        fetchOrder,\n        pickUpOrder,\n        completeOrder,\n      }}\n    >\n      {children}\n    </OrderContext.Provider>\n  );\n};\n\nexport default OrderContextProvider;\n\nexport const useOrderContext = () => useContext(OrderContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}