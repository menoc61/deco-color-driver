{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/circleci/repo/src/ReText.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\nvar styles = StyleSheet.create({\n  baseStyle: {\n    color: \"black\"\n  }\n});\nAnimated.addWhitelistedNativeProps({\n  text: true\n});\nvar AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nvar ReText = function ReText(props) {\n  var _style$props = _objectSpread({\n    style: {}\n  }, props),\n      text = _style$props.text,\n      style = _style$props.style;\n\n  var animatedProps = useAnimatedProps(function () {\n    var _f = function _f() {\n      return {\n        text: text.value\n      };\n    };\n\n    _f._closure = {\n      text: text\n    };\n    _f.asString = \"function _f(){const{text}=jsThis._closure;{return{text:text.value};}}\";\n    _f.__workletHash = 10205633828402;\n    _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-redash\\\\lib\\\\module\\\\ReText.js (1:1368)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(AnimatedTextInput, {\n    underlineColorAndroid: \"transparent\",\n    editable: false,\n    value: text.value,\n    style: [styles.baseStyle, style],\n    animatedProps: animatedProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ReText;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAXD,CAAkB;EAC/BE,SAAS,EAAE;IACTC,KAAK,EAAE;EADE;AADoB,CAAlBH,CAAf;AAKAH,QAAQ,CAACO,yBAATP,CAAmC;EAAEQ,IAAI,EAAE;AAAR,CAAnCR;AAOA,IAAMS,iBAAiB,GAAGT,QAAQ,CAACU,uBAATV,CAAiCW,SAAjCX,CAA1B;;AAEA,IAAMY,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAsB;EACnC;IAA0BC,KAAK,EAAE;EAAjC,GAAwCD,KAAxC;EAAA,IAAQL,IAAR,gBAAQA,IAAR;EAAA,IAAcM,KAAd,gBAAcA,KAAd;;EACA,IAAMC,aAAa,GAAGd,gBAAgB;IAAA,uBAAO;MAC3C,OAAO;QACLO,IAAI,EAAEA,IAAI,CAACQ;MADN,CAAP;IADoC;;IAAA;MAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;;IAAA;EAAA,IAAtC;EAOA,OACEjB,oBAACU,iBAAD;IACEQ,qBAAqB,EAAC,aADxB;IAEEC,QAAQ,EAAE,KAFZ;IAGEF,KAAK,EAAER,IAAI,CAACQ,KAHd;IAIEF,KAAK,EAAE,CAACZ,MAAM,CAACG,SAAR,EAAmBS,KAAnB,CAJT;IAKQC,aAAa,EAAbA,aALR;IAAAI;MAAAC;MAAAC;MAAAC;IAAA;EAAA,EADF;AATF;;AAoBA,eAAeV,MAAf","names":["React","Animated","useAnimatedProps","styles","StyleSheet","create","baseStyle","color","addWhitelistedNativeProps","text","AnimatedTextInput","createAnimatedComponent","TextInput","ReText","props","style","animatedProps","value","underlineColorAndroid","editable","__source","fileName","lineNumber","columnNumber"],"sources":["ReText.tsx"],"sourcesContent":["import React from \"react\";\nimport type { TextProps as RNTextProps } from \"react-native\";\nimport { StyleSheet, TextInput } from \"react-native\";\nimport Animated, { useAnimatedProps } from \"react-native-reanimated\";\n\nconst styles = StyleSheet.create({\n  baseStyle: {\n    color: \"black\",\n  },\n});\nAnimated.addWhitelistedNativeProps({ text: true });\n\ninterface TextProps {\n  text: Animated.SharedValue<string>;\n  style?: Animated.AnimateProps<RNTextProps>[\"style\"];\n}\n\nconst AnimatedTextInput = Animated.createAnimatedComponent(TextInput);\n\nconst ReText = (props: TextProps) => {\n  const { text, style } = { style: {}, ...props };\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      text: text.value,\n      // Here we use any because the text prop is not available in the type\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  });\n  return (\n    <AnimatedTextInput\n      underlineColorAndroid=\"transparent\"\n      editable={false}\n      value={text.value}\n      style={[styles.baseStyle, style]}\n      {...{ animatedProps }}\n    />\n  );\n};\n\nexport default ReText;\n"]},"metadata":{},"sourceType":"module"}