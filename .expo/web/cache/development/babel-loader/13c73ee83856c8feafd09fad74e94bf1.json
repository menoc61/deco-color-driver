{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useSharedValue, useDerivedValue, withTiming, withSpring } from \"react-native-reanimated\";\nimport { bin } from \"./Math\";\nexport var useSpring = function useSpring(state, config) {\n  var value = useSharedValue(0);\n  useEffect(function () {\n    value.value = typeof state === \"boolean\" ? bin(state) : state;\n  }, [state, value]);\n  var transition = useDerivedValue(function () {\n    var _f = function _f() {\n      return withSpring(value.value, config);\n    };\n\n    _f._closure = {\n      withSpring: withSpring,\n      value: value,\n      config: config\n    };\n    _f.asString = \"function _f(){const{withSpring,value,config}=jsThis._closure;{return withSpring(value.value,config);}}\";\n    _f.__workletHash = 16039037436798;\n    _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-redash\\\\lib\\\\module\\\\Transitions.js (1:348)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return transition;\n};\nexport var useTiming = function useTiming(state, config) {\n  var value = useSharedValue(0);\n  useEffect(function () {\n    value.value = typeof state === \"boolean\" ? bin(state) : state;\n  }, [state, value]);\n  var transition = useDerivedValue(function () {\n    var _f = function _f() {\n      return withTiming(value.value, config);\n    };\n\n    _f._closure = {\n      withTiming: withTiming,\n      value: value,\n      config: config\n    };\n    _f.asString = \"function _f(){const{withTiming,value,config}=jsThis._closure;{return withTiming(value.value,config);}}\";\n    _f.__workletHash = 2589344352542;\n    _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-redash\\\\lib\\\\module\\\\Transitions.js (1:625)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return transition;\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAKA,SACEC,cADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,yBALP;AAOA,SAASC,GAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CACvBC,KADuB,EAEvBC,MAFuB,EAGpB;EACH,IAAMC,KAAK,GAAGR,cAAc,CAAC,CAAD,CAA5B;EACAD,SAAS,CAAC,YAAM;IACdS,KAAK,CAACA,KAANA,GAAc,OAAOF,KAAP,KAAiB,SAAjB,GAA6BF,GAAG,CAACE,KAAD,CAAhC,GAA0CA,KAAxDE;EADO,GAEN,CAACF,KAAD,EAAQE,KAAR,CAFM,CAATT;EAGA,IAAMU,UAAU,GAAGR,eAAe;IAAA,uBAAO;MACvC,OAAOE,UAAU,CAACK,KAAK,CAACA,KAAP,EAAcD,MAAd,CAAjB;IADgC;;IAAA;MAAA;MAAA;MAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;;IAAA;EAAA,IAAlC;EAGA,OAAOE,UAAP;AAXK;AAcP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CACvBJ,KADuB,EAEvBC,MAFuB,EAGpB;EACH,IAAMC,KAAK,GAAGR,cAAc,CAAC,CAAD,CAA5B;EACAD,SAAS,CAAC,YAAM;IACdS,KAAK,CAACA,KAANA,GAAc,OAAOF,KAAP,KAAiB,SAAjB,GAA6BF,GAAG,CAACE,KAAD,CAAhC,GAA0CA,KAAxDE;EADO,GAEN,CAACF,KAAD,EAAQE,KAAR,CAFM,CAATT;EAGA,IAAMU,UAAU,GAAGR,eAAe;IAAA,uBAAO;MACvC,OAAOC,UAAU,CAACM,KAAK,CAACA,KAAP,EAAcD,MAAd,CAAjB;IADgC;;IAAA;MAAA;MAAA;MAAA;IAAA;IAAA;IAAA;IAAA;;IAAA;;IAAA;EAAA,IAAlC;EAGA,OAAOE,UAAP;AAXK","names":["useEffect","useSharedValue","useDerivedValue","withTiming","withSpring","bin","useSpring","state","config","value","transition","useTiming"],"sources":["Transitions.ts"],"sourcesContent":["import { useEffect } from \"react\";\nimport type {\n  WithSpringConfig,\n  WithTimingConfig,\n} from \"react-native-reanimated\";\nimport {\n  useSharedValue,\n  useDerivedValue,\n  withTiming,\n  withSpring,\n} from \"react-native-reanimated\";\n\nimport { bin } from \"./Math\";\n\nexport const useSpring = (\n  state: boolean | number,\n  config?: WithSpringConfig\n) => {\n  const value = useSharedValue(0);\n  useEffect(() => {\n    value.value = typeof state === \"boolean\" ? bin(state) : state;\n  }, [state, value]);\n  const transition = useDerivedValue(() => {\n    return withSpring(value.value, config);\n  });\n  return transition;\n};\n\nexport const useTiming = (\n  state: boolean | number,\n  config?: WithTimingConfig\n) => {\n  const value = useSharedValue(0);\n  useEffect(() => {\n    value.value = typeof state === \"boolean\" ? bin(state) : state;\n  }, [state, value]);\n  const transition = useDerivedValue(() => {\n    return withTiming(value.value, config);\n  });\n  return transition;\n};\n"]},"metadata":{},"sourceType":"module"}