{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote, requestFrame, getTimestamp, makeMutable } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, canApplyOptimalisation, getStyleWithoutAnimations, hasColorProps, isAnimated, parseColors, styleDiff, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, makeViewsRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\n\nvar prepareAnimation = function () {\n  var _f = function _f(animatedProp, lastAnimation, lastValue) {\n    if (Array.isArray(animatedProp)) {\n      animatedProp.forEach(function (prop, index) {\n        return prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n      });\n    }\n\n    if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n      var animation = animatedProp;\n      var value = animation.current;\n\n      if (lastValue !== undefined) {\n        if (typeof lastValue === 'object') {\n          if (lastValue.value !== undefined) {\n            value = lastValue.value;\n          } else if (lastValue.onFrame !== undefined) {\n            if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n              value = lastAnimation.current;\n            } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n              value = lastValue.current;\n            }\n          }\n        } else {\n          value = lastValue;\n        }\n      }\n\n      animation.callStart = function (timestamp) {\n        animation.onStart(animation, value, timestamp, lastAnimation);\n      };\n\n      animation.callStart(getTimestamp());\n      animation.callStart = null;\n    } else if (typeof animatedProp === 'object') {\n      Object.keys(animatedProp).forEach(function (key) {\n        return prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n      });\n    }\n  };\n\n  _f._closure = {\n    getTimestamp: getTimestamp\n  };\n  _f.asString = \"function prepareAnimation(animatedProp,lastAnimation,lastValue){const{getTimestamp}=jsThis._closure;{if(Array.isArray(animatedProp)){animatedProp.forEach(function(prop,index){return prepareAnimation(prop,lastAnimation&&lastAnimation[index],lastValue&&lastValue[index]);});}if(typeof animatedProp==='object'&&animatedProp.onFrame){const animation=animatedProp;let value=animation.current;if(lastValue!==undefined){if(typeof lastValue==='object'){if(lastValue.value!==undefined){value=lastValue.value;}else if(lastValue.onFrame!==undefined){if((lastAnimation===null||lastAnimation===void 0?void 0:lastAnimation.current)!==undefined){value=lastAnimation.current;}else if((lastValue===null||lastValue===void 0?void 0:lastValue.current)!==undefined){value=lastValue.current;}}}else{value=lastValue;}}animation.callStart=function(timestamp){animation.onStart(animation,value,timestamp,lastAnimation);};animation.callStart(getTimestamp());animation.callStart=null;}else if(typeof animatedProp==='object'){Object.keys(animatedProp).forEach(function(key){return prepareAnimation(animatedProp[key],lastAnimation&&lastAnimation[key],lastValue&&lastValue[key]);});}}}\";\n  _f.__workletHash = 1333702046144;\n  _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (11:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar runAnimations = function () {\n  var _f = function _f(animation, timestamp, key, result, animationsActive) {\n    if (!animationsActive.value) {\n      return true;\n    }\n\n    if (Array.isArray(animation)) {\n      result[key] = [];\n      var allFinished = true;\n      animation.forEach(function (entry, index) {\n        if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n          allFinished = false;\n        }\n      });\n      return allFinished;\n    } else if (typeof animation === 'object' && animation.onFrame) {\n      var finished = true;\n\n      if (!animation.finished) {\n        if (animation.callStart) {\n          animation.callStart(timestamp);\n          animation.callStart = null;\n        }\n\n        finished = animation.onFrame(animation, timestamp);\n        animation.timestamp = timestamp;\n\n        if (finished) {\n          animation.finished = true;\n          animation.callback && animation.callback(true);\n        }\n      }\n\n      result[key] = animation.current;\n      return finished;\n    } else if (typeof animation === 'object') {\n      result[key] = {};\n      var _allFinished = true;\n      Object.keys(animation).forEach(function (k) {\n        if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n          _allFinished = false;\n        }\n      });\n      return _allFinished;\n    } else {\n      result[key] = animation;\n      return true;\n    }\n  };\n\n  _f._closure = {};\n  _f.asString = \"function runAnimations(animation,timestamp,key,result,animationsActive){if(!animationsActive.value){return true;}if(Array.isArray(animation)){result[key]=[];let allFinished=true;animation.forEach(function(entry,index){if(!runAnimations(entry,timestamp,index,result[key],animationsActive)){allFinished=false;}});return allFinished;}else if(typeof animation==='object'&&animation.onFrame){let finished=true;if(!animation.finished){if(animation.callStart){animation.callStart(timestamp);animation.callStart=null;}finished=animation.onFrame(animation,timestamp);animation.timestamp=timestamp;if(finished){animation.finished=true;animation.callback&&animation.callback(true);}}result[key]=animation.current;return finished;}else if(typeof animation==='object'){result[key]={};let allFinished=true;Object.keys(animation).forEach(function(k){if(!runAnimations(animation[k],timestamp,k,result[key],animationsActive)){allFinished=false;}});return allFinished;}else{result[key]=animation;return true;}}\";\n  _f.__workletHash = 3625332641327;\n  _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (53:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar styleUpdater = function () {\n  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n    var _a, _b;\n\n    var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    var oldValues = state.last;\n    var hasAnimations = false;\n\n    for (var key in newValues) {\n      var value = newValues[key];\n\n      if (isAnimated(value)) {\n        prepareAnimation(value, animations[key], oldValues[key]);\n        animations[key] = value;\n        hasAnimations = true;\n      } else {\n        delete animations[key];\n      }\n    }\n\n    if (hasAnimations) {\n      var frame = function frame(timestamp) {\n        var animations = state.animations,\n            last = state.last,\n            isAnimationCancelled = state.isAnimationCancelled;\n\n        if (isAnimationCancelled) {\n          state.isAnimationRunning = false;\n          return;\n        }\n\n        var updates = {};\n        var allFinished = true;\n\n        for (var propName in animations) {\n          var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n          if (finished) {\n            last[propName] = updates[propName];\n            delete animations[propName];\n          } else {\n            allFinished = false;\n          }\n        }\n\n        if (updates) {\n          updateProps(viewDescriptors, updates, maybeViewRef);\n        }\n\n        if (!allFinished) {\n          requestFrame(frame);\n        } else {\n          state.isAnimationRunning = false;\n        }\n      };\n\n      state.animations = animations;\n\n      if (!state.isAnimationRunning) {\n        state.isAnimationCancelled = false;\n        state.isAnimationRunning = true;\n\n        if (_frameTimestamp) {\n          frame(_frameTimestamp);\n        } else {\n          requestFrame(frame);\n        }\n      }\n\n      state.last = _extends({}, oldValues, newValues);\n      var style = getStyleWithoutAnimations(state.last);\n\n      if (style) {\n        updateProps(viewDescriptors, style, maybeViewRef);\n      }\n    } else {\n      state.isAnimationCancelled = true;\n      state.animations = [];\n      updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n  };\n\n  _f._closure = {\n    isAnimated: isAnimated,\n    prepareAnimation: prepareAnimation,\n    runAnimations: runAnimations,\n    updateProps: updateProps,\n    requestFrame: requestFrame,\n    getStyleWithoutAnimations: getStyleWithoutAnimations\n  };\n  _f.asString = \"function styleUpdater(viewDescriptors,updater,state,maybeViewRef,animationsActive){const{isAnimated,prepareAnimation,runAnimations,updateProps,requestFrame,getStyleWithoutAnimations}=jsThis._closure;{var _a,_b;const animations=(_a=state.animations)!==null&&_a!==void 0?_a:{};const newValues=(_b=updater())!==null&&_b!==void 0?_b:{};const oldValues=state.last;let hasAnimations=false;for(const key in newValues){const value=newValues[key];if(isAnimated(value)){prepareAnimation(value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}else{delete animations[key];}}if(hasAnimations){const frame=function(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;for(const propName in animations){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}}if(updates){updateProps(viewDescriptors,updates,maybeViewRef);}if(!allFinished){requestFrame(frame);}else{state.isAnimationRunning=false;}};state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;if(_frameTimestamp){frame(_frameTimestamp);}else{requestFrame(frame);}}state.last=Object.assign({},oldValues,newValues);const style=getStyleWithoutAnimations(state.last);if(style){updateProps(viewDescriptors,style,maybeViewRef);}}else{state.isAnimationCancelled=true;state.animations=[];updateProps(viewDescriptors,newValues,maybeViewRef);}}}\";\n  _f.__workletHash = 10064957750910;\n  _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (100:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar jestStyleUpdater = function () {\n  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n    var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n\n    var _a, _b;\n\n    var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    var oldValues = state.last;\n    var hasAnimations = false;\n    Object.keys(animations).forEach(function (key) {\n      var value = newValues[key];\n\n      if (!isAnimated(value)) {\n        delete animations[key];\n      }\n    });\n    Object.keys(newValues).forEach(function (key) {\n      var value = newValues[key];\n\n      if (isAnimated(value)) {\n        prepareAnimation(value, animations[key], oldValues[key]);\n        animations[key] = value;\n        hasAnimations = true;\n      }\n    });\n\n    function frame(timestamp) {\n      var animations = state.animations,\n          last = state.last,\n          isAnimationCancelled = state.isAnimationCancelled;\n\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      var updates = {};\n      var allFinished = true;\n      Object.keys(animations).forEach(function (propName) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      });\n\n      if (Object.keys(updates).length) {\n        updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n      }\n\n      if (!allFinished) {\n        requestFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    }\n\n    if (hasAnimations) {\n      state.animations = animations;\n\n      if (!state.isAnimationRunning) {\n        state.isAnimationCancelled = false;\n        state.isAnimationRunning = true;\n\n        if (_frameTimestamp) {\n          frame(_frameTimestamp);\n        } else {\n          requestFrame(frame);\n        }\n      }\n    } else {\n      state.isAnimationCancelled = true;\n      state.animations = [];\n    }\n\n    var diff = styleDiff(oldValues, newValues);\n    state.last = _extends({}, oldValues, newValues);\n\n    if (Object.keys(diff).length !== 0) {\n      updatePropsJestWrapper(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\n    }\n  };\n\n  _f._closure = {\n    isAnimated: isAnimated,\n    prepareAnimation: prepareAnimation,\n    runAnimations: runAnimations,\n    updatePropsJestWrapper: updatePropsJestWrapper,\n    requestFrame: requestFrame,\n    styleDiff: styleDiff\n  };\n  _f.asString = \"function jestStyleUpdater(viewDescriptors,updater,state,maybeViewRef,animationsActive,animatedStyle,adapters=[]){const{isAnimated,prepareAnimation,runAnimations,updatePropsJestWrapper,requestFrame,styleDiff}=jsThis._closure;{var _a,_b;const animations=(_a=state.animations)!==null&&_a!==void 0?_a:{};const newValues=(_b=updater())!==null&&_b!==void 0?_b:{};const oldValues=state.last;let hasAnimations=false;Object.keys(animations).forEach(function(key){const value=newValues[key];if(!isAnimated(value)){delete animations[key];}});Object.keys(newValues).forEach(function(key){const value=newValues[key];if(isAnimated(value)){prepareAnimation(value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}});function frame(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;Object.keys(animations).forEach(function(propName){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}});if(Object.keys(updates).length){updatePropsJestWrapper(viewDescriptors,updates,maybeViewRef,animatedStyle,adapters);}if(!allFinished){requestFrame(frame);}else{state.isAnimationRunning=false;}}if(hasAnimations){state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;if(_frameTimestamp){frame(_frameTimestamp);}else{requestFrame(frame);}}}else{state.isAnimationCancelled=true;state.animations=[];}const diff=styleDiff(oldValues,newValues);state.last=Object.assign({},oldValues,newValues);if(Object.keys(diff).length!==0){updatePropsJestWrapper(viewDescriptors,diff,maybeViewRef,animatedStyle,adapters);}}}\";\n  _f.__workletHash = 13781832065631;\n  _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (170:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(prop), _step; !(_step = _iterator()).done;) {\n      var element = _step.value;\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    for (var _i = 0, _Object$keys = Object.keys(prop); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop.value !== undefined) {\n    throw new Error(\"invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\n\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _a, _b;\n\n  var viewsRef = makeViewsRefSet();\n  var viewDescriptors = makeViewDescriptorsSet();\n  var initRef = useRef();\n  var inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var animationsActive = useSharedValue(true);\n  var animatedStyle = useRef({});\n\n  if (!dependencies) {\n    dependencies = [].concat(inputs, [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeRemote({\n        last: initialStyle\n      }),\n      sharableViewDescriptors: makeMutable([])\n    };\n    viewDescriptors.rebuildsharableViewDescriptors(initRef.current.sharableViewDescriptors);\n  }\n\n  dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\n  var _initRef$current = initRef.current,\n      initial = _initRef$current.initial,\n      remoteState = _initRef$current.remoteState,\n      sharableViewDescriptors = _initRef$current.sharableViewDescriptors;\n  var maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n  useEffect(function () {\n    var fun;\n    var upadterFn = updater;\n    var optimalization = updater.__optimalization;\n\n    if (adapters) {\n      upadterFn = function () {\n        var _f = function _f() {\n          var newValues = updater();\n          adaptersArray.forEach(function (adapter) {\n            adapter(newValues);\n          });\n          return newValues;\n        };\n\n        _f._closure = {\n          updater: updater,\n          adaptersArray: adaptersArray\n        };\n        _f.asString = \"function _f(){const{updater,adaptersArray}=jsThis._closure;{const newValues=updater();adaptersArray.forEach(function(adapter){adapter(newValues);});return newValues;}}\";\n        _f.__workletHash = 15812374835043;\n        _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (311:24)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }();\n    }\n\n    if (canApplyOptimalisation(upadterFn) && !shouldBeUseWeb()) {\n      if (hasColorProps(upadterFn())) {\n        upadterFn = function () {\n          var _f = function _f() {\n            var style = upadterFn();\n            parseColors(style);\n            return style;\n          };\n\n          _f._closure = {\n            upadterFn: upadterFn,\n            parseColors: parseColors\n          };\n          _f.asString = \"function _f(){const{upadterFn,parseColors}=jsThis._closure;{const style=upadterFn();parseColors(style);return style;}}\";\n          _f.__workletHash = 1270259438741;\n          _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (322:28)\";\n\n          global.__reanimatedWorkletInit(_f);\n\n          return _f;\n        }();\n      }\n    } else if (!shouldBeUseWeb()) {\n      optimalization = 0;\n\n      upadterFn = function () {\n        var _f = function _f() {\n          var style = upadterFn();\n          parseColors(style);\n          return style;\n        };\n\n        _f._closure = {\n          upadterFn: upadterFn,\n          parseColors: parseColors\n        };\n        _f.asString = \"function _f(){const{upadterFn,parseColors}=jsThis._closure;{const style=upadterFn();parseColors(style);return style;}}\";\n        _f.__workletHash = 1270259438741;\n        _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (332:24)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }();\n    }\n\n    if (typeof updater.__optimalization !== undefined) {\n      upadterFn.__optimalization = optimalization;\n    }\n\n    if (isJest()) {\n      fun = function () {\n        var _f = function _f() {\n          jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n        };\n\n        _f._closure = {\n          jestStyleUpdater: jestStyleUpdater,\n          sharableViewDescriptors: sharableViewDescriptors,\n          updater: updater,\n          remoteState: remoteState,\n          maybeViewRef: maybeViewRef,\n          animationsActive: animationsActive,\n          animatedStyle: animatedStyle,\n          adaptersArray: adaptersArray\n        };\n        _f.asString = \"function _f(){const{jestStyleUpdater,sharableViewDescriptors,updater,remoteState,maybeViewRef,animationsActive,animatedStyle,adaptersArray}=jsThis._closure;{jestStyleUpdater(sharableViewDescriptors,updater,remoteState,maybeViewRef,animationsActive,animatedStyle,adaptersArray);}}\";\n        _f.__workletHash = 11302607948209;\n        _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (343:18)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }();\n    } else {\n      fun = function () {\n        var _f = function _f() {\n          styleUpdater(sharableViewDescriptors, upadterFn, remoteState, maybeViewRef, animationsActive);\n        };\n\n        _f._closure = {\n          styleUpdater: styleUpdater,\n          sharableViewDescriptors: sharableViewDescriptors,\n          upadterFn: upadterFn,\n          remoteState: remoteState,\n          maybeViewRef: maybeViewRef,\n          animationsActive: animationsActive\n        };\n        _f.asString = \"function _f(){const{styleUpdater,sharableViewDescriptors,upadterFn,remoteState,maybeViewRef,animationsActive}=jsThis._closure;{styleUpdater(sharableViewDescriptors,upadterFn,remoteState,maybeViewRef,animationsActive);}}\";\n        _f.__workletHash = 13265500227473;\n        _f.__location = \"C:\\\\Users\\\\MENO\\\\Desktop\\\\PROJECT\\\\APP-DECO-COLOR\\\\deco-color-driver\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (349:18)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }();\n    }\n\n    var mapperId = startMapper(fun, inputs, [], upadterFn, sharableViewDescriptors);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n\n  if (process.env.JEST_WORKER_ID) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"names":["useEffect","useRef","startMapper","stopMapper","makeRemote","requestFrame","getTimestamp","makeMutable","updateProps","updatePropsJestWrapper","initialUpdaterRun","NativeReanimatedModule","useSharedValue","buildWorkletsHash","canApplyOptimalisation","getStyleWithoutAnimations","hasColorProps","isAnimated","parseColors","styleDiff","validateAnimatedStyles","makeViewDescriptorsSet","makeViewsRefSet","isJest","shouldBeUseWeb","prepareAnimation","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","_a","_b","animations","newValues","oldValues","last","hasAnimations","frame","isAnimationCancelled","isAnimationRunning","updates","propName","_frameTimestamp","style","jestStyleUpdater","animatedStyle","adapters","length","diff","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","viewsRef","initRef","inputs","values","_closure","adaptersArray","adaptersHash","__workletHash","push","initialStyle","initial","remoteState","sharableViewDescriptors","rebuildsharableViewDescriptors","native","fun","upadterFn","optimalization","__optimalization","adapter","mapperId","process","env","JEST_WORKER_ID"],"sources":["C:/Users/MENO/Desktop/PROJECT/APP-DECO-COLOR/deco-color-driver/node_modules/react-native-reanimated/lib/reanimated2/hook/useAnimatedStyle.js"],"sourcesContent":["/* global _frameTimestamp */\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote, requestFrame, getTimestamp, makeMutable, } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport NativeReanimatedModule from '../NativeReanimated';\nimport { useSharedValue } from './useSharedValue';\nimport { buildWorkletsHash, canApplyOptimalisation, getStyleWithoutAnimations, hasColorProps, isAnimated, parseColors, styleDiff, validateAnimatedStyles, } from './utils';\nimport { makeViewDescriptorsSet, makeViewsRefSet, } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nfunction prepareAnimation(animatedProp, lastAnimation, lastValue) {\n    'worklet';\n    if (Array.isArray(animatedProp)) {\n        animatedProp.forEach((prop, index) => prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]));\n        // return animatedProp;\n    }\n    if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n        const animation = animatedProp;\n        let value = animation.current;\n        if (lastValue !== undefined) {\n            if (typeof lastValue === 'object') {\n                if (lastValue.value !== undefined) {\n                    // previously it was a shared value\n                    value = lastValue.value;\n                }\n                else if (lastValue.onFrame !== undefined) {\n                    if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n                        // it was an animation before, copy its state\n                        value = lastAnimation.current;\n                    }\n                    else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n                        // it was initialized\n                        value = lastValue.current;\n                    }\n                }\n            }\n            else {\n                // previously it was a plain value, just set it as starting point\n                value = lastValue;\n            }\n        }\n        animation.callStart = (timestamp) => {\n            animation.onStart(animation, value, timestamp, lastAnimation);\n        };\n        animation.callStart(getTimestamp());\n        animation.callStart = null;\n    }\n    else if (typeof animatedProp === 'object') {\n        // it is an object\n        Object.keys(animatedProp).forEach((key) => prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]));\n    }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n    'worklet';\n    if (!animationsActive.value) {\n        return true;\n    }\n    if (Array.isArray(animation)) {\n        result[key] = [];\n        let allFinished = true;\n        animation.forEach((entry, index) => {\n            if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n                allFinished = false;\n            }\n        });\n        return allFinished;\n    }\n    else if (typeof animation === 'object' && animation.onFrame) {\n        let finished = true;\n        if (!animation.finished) {\n            if (animation.callStart) {\n                animation.callStart(timestamp);\n                animation.callStart = null;\n            }\n            finished = animation.onFrame(animation, timestamp);\n            animation.timestamp = timestamp;\n            if (finished) {\n                animation.finished = true;\n                animation.callback && animation.callback(true /* finished */);\n            }\n        }\n        result[key] = animation.current;\n        return finished;\n    }\n    else if (typeof animation === 'object') {\n        result[key] = {};\n        let allFinished = true;\n        Object.keys(animation).forEach((k) => {\n            if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n                allFinished = false;\n            }\n        });\n        return allFinished;\n    }\n    else {\n        result[key] = animation;\n        return true;\n    }\n}\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n    'worklet';\n    var _a, _b;\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    const oldValues = state.last;\n    let hasAnimations = false;\n    for (const key in newValues) {\n        const value = newValues[key];\n        if (isAnimated(value)) {\n            prepareAnimation(value, animations[key], oldValues[key]);\n            animations[key] = value;\n            hasAnimations = true;\n        }\n        else {\n            delete animations[key];\n        }\n    }\n    if (hasAnimations) {\n        const frame = (timestamp) => {\n            const { animations, last, isAnimationCancelled } = state;\n            if (isAnimationCancelled) {\n                state.isAnimationRunning = false;\n                return;\n            }\n            const updates = {};\n            let allFinished = true;\n            for (const propName in animations) {\n                const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n                if (finished) {\n                    last[propName] = updates[propName];\n                    delete animations[propName];\n                }\n                else {\n                    allFinished = false;\n                }\n            }\n            if (updates) {\n                updateProps(viewDescriptors, updates, maybeViewRef);\n            }\n            if (!allFinished) {\n                requestFrame(frame);\n            }\n            else {\n                state.isAnimationRunning = false;\n            }\n        };\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n            state.isAnimationCancelled = false;\n            state.isAnimationRunning = true;\n            if (_frameTimestamp) {\n                frame(_frameTimestamp);\n            }\n            else {\n                requestFrame(frame);\n            }\n        }\n        state.last = Object.assign({}, oldValues, newValues);\n        const style = getStyleWithoutAnimations(state.last);\n        if (style) {\n            updateProps(viewDescriptors, style, maybeViewRef);\n        }\n    }\n    else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n        updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle, adapters = []) {\n    'worklet';\n    var _a, _b;\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    const oldValues = state.last;\n    // extract animated props\n    let hasAnimations = false;\n    Object.keys(animations).forEach((key) => {\n        const value = newValues[key];\n        if (!isAnimated(value)) {\n            delete animations[key];\n        }\n    });\n    Object.keys(newValues).forEach((key) => {\n        const value = newValues[key];\n        if (isAnimated(value)) {\n            prepareAnimation(value, animations[key], oldValues[key]);\n            animations[key] = value;\n            hasAnimations = true;\n        }\n    });\n    function frame(timestamp) {\n        const { animations, last, isAnimationCancelled } = state;\n        if (isAnimationCancelled) {\n            state.isAnimationRunning = false;\n            return;\n        }\n        const updates = {};\n        let allFinished = true;\n        Object.keys(animations).forEach((propName) => {\n            const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n            if (finished) {\n                last[propName] = updates[propName];\n                delete animations[propName];\n            }\n            else {\n                allFinished = false;\n            }\n        });\n        if (Object.keys(updates).length) {\n            updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n        }\n        if (!allFinished) {\n            requestFrame(frame);\n        }\n        else {\n            state.isAnimationRunning = false;\n        }\n    }\n    if (hasAnimations) {\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n            state.isAnimationCancelled = false;\n            state.isAnimationRunning = true;\n            if (_frameTimestamp) {\n                frame(_frameTimestamp);\n            }\n            else {\n                requestFrame(frame);\n            }\n        }\n    }\n    else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n    }\n    // calculate diff\n    const diff = styleDiff(oldValues, newValues);\n    state.last = Object.assign({}, oldValues, newValues);\n    if (Object.keys(diff).length !== 0) {\n        updatePropsJestWrapper(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\n    }\n}\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(prop, currentKey) {\n    if (Array.isArray(prop)) {\n        // if it's an array (i.ex. transform) validate all its elements\n        for (const element of prop) {\n            checkSharedValueUsage(element, currentKey);\n        }\n    }\n    else if (typeof prop === 'object' && prop.value === undefined) {\n        // if it's a nested object, run validation for all its props\n        for (const key of Object.keys(prop)) {\n            checkSharedValueUsage(prop[key], key);\n        }\n    }\n    else if (currentKey !== undefined &&\n        typeof prop === 'object' &&\n        prop.value !== undefined) {\n        // if shared value is passed insted of its value, throw an error\n        throw new Error(`invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);\n    }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n    var _a, _b;\n    const viewsRef = makeViewsRefSet();\n    const viewDescriptors = makeViewDescriptorsSet();\n    const initRef = useRef();\n    const inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\n    const adaptersArray = adapters\n        ? Array.isArray(adapters)\n            ? adapters\n            : [adapters]\n        : [];\n    const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n    const animationsActive = useSharedValue(true);\n    const animatedStyle = useRef({});\n    // build dependencies\n    if (!dependencies) {\n        dependencies = [...inputs, updater.__workletHash];\n    }\n    else {\n        dependencies.push(updater.__workletHash);\n    }\n    adaptersHash && dependencies.push(adaptersHash);\n    if (!initRef.current) {\n        const initialStyle = initialUpdaterRun(updater);\n        validateAnimatedStyles(initialStyle);\n        initRef.current = {\n            initial: {\n                value: initialStyle,\n                updater: updater,\n            },\n            remoteState: makeRemote({ last: initialStyle }),\n            sharableViewDescriptors: makeMutable([]),\n        };\n        viewDescriptors.rebuildsharableViewDescriptors(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        initRef.current.sharableViewDescriptors);\n    }\n    dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { initial, remoteState, sharableViewDescriptors } = initRef.current;\n    const maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n    useEffect(() => {\n        let fun;\n        let upadterFn = updater;\n        let optimalization = updater.__optimalization;\n        if (adapters) {\n            upadterFn = () => {\n                'worklet';\n                const newValues = updater();\n                adaptersArray.forEach((adapter) => {\n                    adapter(newValues);\n                });\n                return newValues;\n            };\n        }\n        if (canApplyOptimalisation(upadterFn) && !shouldBeUseWeb()) {\n            if (hasColorProps(upadterFn())) {\n                upadterFn = () => {\n                    'worklet';\n                    const style = upadterFn();\n                    parseColors(style);\n                    return style;\n                };\n            }\n        }\n        else if (!shouldBeUseWeb()) {\n            optimalization = 0;\n            upadterFn = () => {\n                'worklet';\n                const style = upadterFn();\n                parseColors(style);\n                return style;\n            };\n        }\n        if (typeof updater.__optimalization !== undefined) {\n            upadterFn.__optimalization = optimalization;\n        }\n        if (isJest()) {\n            fun = () => {\n                'worklet';\n                jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n            };\n        }\n        else {\n            fun = () => {\n                'worklet';\n                styleUpdater(sharableViewDescriptors, upadterFn, remoteState, maybeViewRef, animationsActive);\n            };\n        }\n        const mapperId = startMapper(fun, inputs, [], upadterFn, \n        // TODO fix this\n        sharableViewDescriptors);\n        return () => {\n            stopMapper(mapperId);\n        };\n    }, dependencies);\n    useEffect(() => {\n        animationsActive.value = true;\n        return () => {\n            // initRef.current = null;\n            // viewsRef = null;\n            animationsActive.value = false;\n        };\n    }, []);\n    checkSharedValueUsage(initial.value);\n    if (process.env.JEST_WORKER_ID) {\n        return { viewDescriptors, initial: initial, viewsRef, animatedStyle };\n    }\n    else {\n        return { viewDescriptors, initial: initial, viewsRef };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}