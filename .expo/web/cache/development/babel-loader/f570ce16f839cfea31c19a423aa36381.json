{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useRef, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles\";\nimport MapView from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useOrderContext } from \"../../contexts/OrderContext\";\nimport BottomSheetDetails from \"./BottomSheetDetails\";\nimport CustomMarker from \"../../components/CustomMarker\";\nimport { DataStore } from \"aws-amplify\";\nimport { Courier } from \"../../models\";\nimport { useAuthContext } from \"../../contexts/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar OrderDelivery = function OrderDelivery() {\n  var _route$params, _order$Company, _order$Company2;\n\n  var _useOrderContext = useOrderContext(),\n      order = _useOrderContext.order,\n      user = _useOrderContext.user,\n      fetchOrder = _useOrderContext.fetchOrder;\n\n  var _useAuthContext = useAuthContext(),\n      dbCourier = _useAuthContext.dbCourier;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      driverLocation = _useState2[0],\n      setDriverLocation = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalMinutes = _useState4[0],\n      setTotalMinutes = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalKm = _useState6[0],\n      setTotalKm = _useState6[1];\n\n  var mapRef = useRef(null);\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var navigation = useNavigation();\n  var route = useRoute();\n  var id = (_route$params = route.params) == null ? void 0 : _route$params.id;\n  useEffect(function () {\n    fetchOrder(id);\n  }, [id]);\n  useEffect(function () {\n    if (!driverLocation) {\n      return;\n    }\n\n    DataStore.save(Courier.copyOf(dbCourier, function (updated) {\n      updated.lat = driverLocation.latitude;\n      updated.lng = driverLocation.longitude;\n    }));\n  }, [driverLocation]);\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(!status === \"granted\")) {\n                _context.next = 7;\n                break;\n              }\n\n              console.log(\"User doesn't grant permission for localisation\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 9:\n              location = _context.sent;\n              setDriverLocation({\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    var foregroundSubscription = Location.watchPositionAsync({\n      accuracy: Location.Accuracy.High,\n      distanceInterval: 500\n    }, function (updatedLocation) {\n      setDriverLocation({\n        latitude: updatedLocation.coords.latitude,\n        longitude: updatedLocation.coords.longitude\n      });\n    });\n    return foregroundSubscription;\n  }, []);\n\n  var zoomInOnDriver = function zoomInOnDriver() {\n    mapRef.current.animateToRegion({\n      latitude: driverLocation.latitude,\n      longitude: driverLocation.longitude,\n      latitudeDelta: 0.01,\n      longitudeDelta: 0.01\n    });\n  };\n\n  var companyLocation = {\n    latitude: order == null ? void 0 : (_order$Company = order.Company) == null ? void 0 : _order$Company.lat,\n    longitude: order == null ? void 0 : (_order$Company2 = order.Company) == null ? void 0 : _order$Company2.lng\n  };\n  var deliveryLocation = {\n    latitude: user == null ? void 0 : user.lat,\n    longitude: user == null ? void 0 : user.lng\n  };\n\n  if (!order || !user || !driverLocation) {\n    return _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"gray\"\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(MapView, {\n      ref: mapRef,\n      style: {\n        width: width,\n        height: height\n      },\n      showsUserLocation: true,\n      followsUserLocation: true,\n      initialRegion: {\n        latitude: driverLocation.latitude,\n        longitude: driverLocation.longitude,\n        latitudeDelta: 0.07,\n        longitudeDelta: 0.07\n      },\n      children: [_jsx(MapViewDirections, {\n        origin: driverLocation,\n        destination: order.status === \"ACCEPTED\" ? companyLocation : deliveryLocation,\n        strokeWidth: 10,\n        waypoints: order.status === \"READY_FOR_PICKUP\" ? [companyLocation] : [],\n        strokeColor: \"#3FC060\",\n        apikey: process.env.MapViewDirections_API_KEY,\n        onReady: function onReady(result) {\n          setTotalMinutes(result.duration);\n          setTotalKm(result.distance);\n        }\n      }), _jsx(CustomMarker, {\n        data: order.Company,\n        type: \"COMPANY\"\n      }), _jsx(CustomMarker, {\n        data: user,\n        type: \"USER\"\n      })]\n    }), _jsx(BottomSheetDetails, {\n      totalKm: totalKm,\n      totalMinutes: totalMinutes,\n      onAccepted: zoomInOnDriver\n    }), order.status === \"READY_FOR_PICKUP\" && _jsx(Ionicons, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      name: \"arrow-back-circle\",\n      size: 45,\n      color: \"black\",\n      style: {\n        top: 40,\n        left: 15,\n        position: \"absolute\"\n      }\n    })]\n  });\n};\n\nexport default OrderDelivery;","map":{"version":3,"names":["useRef","useEffect","useState","styles","MapView","Location","Ionicons","MapViewDirections","useNavigation","useRoute","useOrderContext","BottomSheetDetails","CustomMarker","DataStore","Courier","useAuthContext","OrderDelivery","order","user","fetchOrder","dbCourier","driverLocation","setDriverLocation","totalMinutes","setTotalMinutes","totalKm","setTotalKm","mapRef","useWindowDimensions","width","height","navigation","route","id","params","save","copyOf","updated","lat","latitude","lng","longitude","requestForegroundPermissionsAsync","status","console","log","getCurrentPositionAsync","location","coords","foregroundSubscription","watchPositionAsync","accuracy","Accuracy","High","distanceInterval","updatedLocation","zoomInOnDriver","current","animateToRegion","latitudeDelta","longitudeDelta","companyLocation","Company","deliveryLocation","container","process","env","MapViewDirections_API_KEY","result","duration","distance","goBack","top","left","position"],"sources":["C:/Users/MENO/Desktop/PROJECT/APP-DECO-COLOR/deco-color-driver/src/screens/OrderDelivery/index.js"],"sourcesContent":["import { useRef, useEffect, useState } from \"react\";\nimport { View, useWindowDimensions, ActivityIndicator } from \"react-native\";\nimport styles from \"./styles\";\nimport MapView from \"react-native-maps\";\nimport * as Location from \"expo-location\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useOrderContext } from \"../../contexts/OrderContext\";\nimport BottomSheetDetails from \"./BottomSheetDetails\";\nimport CustomMarker from \"../../components/CustomMarker\";\nimport { DataStore } from \"aws-amplify\";\nimport { Courier } from \"../../models\";\nimport { useAuthContext } from \"../../contexts/AuthContext\";\n\nconst OrderDelivery = () => {\n  const { order, user, fetchOrder } = useOrderContext();\n  const { dbCourier } = useAuthContext();\n\n  const [driverLocation, setDriverLocation] = useState(null);\n  const [totalMinutes, setTotalMinutes] = useState(0);\n  const [totalKm, setTotalKm] = useState(0);\n\n  const mapRef = useRef(null);\n  const { width, height } = useWindowDimensions();\n\n  const navigation = useNavigation();\n  const route = useRoute();\n  const id = route.params?.id;\n\n  useEffect(() => {\n    fetchOrder(id);\n  }, [id]);\n\n  useEffect(() => {\n    if (!driverLocation) {\n      return;\n    }\n    DataStore.save(\n      Courier.copyOf(dbCourier, (updated) => {\n        updated.lat = driverLocation.latitude;\n        updated.lng = driverLocation.longitude;\n      })\n    );\n  }, [driverLocation]);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (!status === \"granted\") {\n        console.log(\"User doesn't grant permission for localisation\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync();\n      setDriverLocation({\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n      });\n    })();\n\n    const foregroundSubscription = Location.watchPositionAsync(\n      {\n        accuracy: Location.Accuracy.High,\n        distanceInterval: 500,\n      },\n      (updatedLocation) => {\n        setDriverLocation({\n          latitude: updatedLocation.coords.latitude,\n          longitude: updatedLocation.coords.longitude,\n        });\n      }\n    );\n    return foregroundSubscription;\n  }, []);\n\n  const zoomInOnDriver = () => {\n    mapRef.current.animateToRegion({\n      latitude: driverLocation.latitude,\n      longitude: driverLocation.longitude,\n      latitudeDelta: 0.01,\n      longitudeDelta: 0.01,\n    });\n  };\n\n  const companyLocation = {\n    latitude: order?.Company?.lat,\n    longitude: order?.Company?.lng,\n  };\n  const deliveryLocation = {\n    latitude: user?.lat,\n    longitude: user?.lng,\n  };\n// spinner\n  if (!order || !user || !driverLocation) {\n    return <ActivityIndicator size={\"large\"} color=\"gray\" />;\n  }\n\n  return (\n    <View style={styles.container}>\n      <MapView\n        ref={mapRef}\n        style={{ width, height }}\n        showsUserLocation\n        followsUserLocation\n        initialRegion={{\n          latitude: driverLocation.latitude,\n          longitude: driverLocation.longitude,\n          latitudeDelta: 0.07,\n          longitudeDelta: 0.07,\n        }}\n      >\n        <MapViewDirections\n          origin={driverLocation}\n          destination={\n            order.status === \"ACCEPTED\" ? companyLocation : deliveryLocation\n          }\n          strokeWidth={10}\n          waypoints={\n            order.status === \"READY_FOR_PICKUP\" ? [companyLocation] : []\n          }\n          strokeColor=\"#3FC060\"\n          apikey={process.env.MapViewDirections_API_KEY}\n          onReady={(result) => {\n            setTotalMinutes(result.duration);\n            setTotalKm(result.distance);\n          }}\n        />\n        <CustomMarker data={order.Company} type=\"COMPANY\" />\n        <CustomMarker data={user} type=\"USER\" />\n      </MapView>\n      <BottomSheetDetails\n        totalKm={totalKm}\n        totalMinutes={totalMinutes}\n        onAccepted={zoomInOnDriver}\n      />\n      {order.status === \"READY_FOR_PICKUP\" && (\n        <Ionicons\n          onPress={() => navigation.goBack()}\n          name=\"arrow-back-circle\"\n          size={45}\n          color=\"black\"\n          style={{ top: 40, left: 15, position: \"absolute\" }}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default OrderDelivery;\n"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;AACA,SAASC,eAAT;AACA,OAAOC,kBAAP;AACA,OAAOC,YAAP;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT;AACA,SAASC,cAAT;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAAA;;EAC1B,uBAAoCN,eAAe,EAAnD;EAAA,IAAQO,KAAR,oBAAQA,KAAR;EAAA,IAAeC,IAAf,oBAAeA,IAAf;EAAA,IAAqBC,UAArB,oBAAqBA,UAArB;;EACA,sBAAsBJ,cAAc,EAApC;EAAA,IAAQK,SAAR,mBAAQA,SAAR;;EAEA,gBAA4ClB,QAAQ,CAAC,IAAD,CAApD;EAAA;EAAA,IAAOmB,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAAwCpB,QAAQ,CAAC,CAAD,CAAhD;EAAA;EAAA,IAAOqB,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAA8BtB,QAAQ,CAAC,CAAD,CAAtC;EAAA;EAAA,IAAOuB,OAAP;EAAA,IAAgBC,UAAhB;;EAEA,IAAMC,MAAM,GAAG3B,MAAM,CAAC,IAAD,CAArB;;EACA,2BAA0B4B,mBAAmB,EAA7C;EAAA,IAAQC,KAAR,wBAAQA,KAAR;EAAA,IAAeC,MAAf,wBAAeA,MAAf;;EAEA,IAAMC,UAAU,GAAGvB,aAAa,EAAhC;EACA,IAAMwB,KAAK,GAAGvB,QAAQ,EAAtB;EACA,IAAMwB,EAAE,oBAAGD,KAAK,CAACE,MAAT,qBAAG,cAAcD,EAAzB;EAEAhC,SAAS,CAAC,YAAM;IACdkB,UAAU,CAACc,EAAD,CAAV;EACD,CAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;EAIAhC,SAAS,CAAC,YAAM;IACd,IAAI,CAACoB,cAAL,EAAqB;MACnB;IACD;;IACDR,SAAS,CAACsB,IAAV,CACErB,OAAO,CAACsB,MAAR,CAAehB,SAAf,EAA0B,UAACiB,OAAD,EAAa;MACrCA,OAAO,CAACC,GAAR,GAAcjB,cAAc,CAACkB,QAA7B;MACAF,OAAO,CAACG,GAAR,GAAcnB,cAAc,CAACoB,SAA7B;IACD,CAHD,CADF;EAMD,CAVQ,EAUN,CAACpB,cAAD,CAVM,CAAT;EAYApB,SAAS,CAAC,YAAM;IACd,CAAC;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACwBI,QAAQ,CAACqC,iCAAT,EADxB;;YAAA;cAAA;cACOC,MADP,yBACOA,MADP;;cAAA,MAEK,CAACA,MAAD,KAAY,SAFjB;gBAAA;gBAAA;cAAA;;cAGGC,OAAO,CAACC,GAAR,CAAY,gDAAZ;cAHH;;YAAA;cAAA;cAAA,iCAOsBxC,QAAQ,CAACyC,uBAAT,EAPtB;;YAAA;cAOKC,QAPL;cAQCzB,iBAAiB,CAAC;gBAChBiB,QAAQ,EAAEQ,QAAQ,CAACC,MAAT,CAAgBT,QADV;gBAEhBE,SAAS,EAAEM,QAAQ,CAACC,MAAT,CAAgBP;cAFX,CAAD,CAAjB;;YARD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD;;IAcA,IAAMQ,sBAAsB,GAAG5C,QAAQ,CAAC6C,kBAAT,CAC7B;MACEC,QAAQ,EAAE9C,QAAQ,CAAC+C,QAAT,CAAkBC,IAD9B;MAEEC,gBAAgB,EAAE;IAFpB,CAD6B,EAK7B,UAACC,eAAD,EAAqB;MACnBjC,iBAAiB,CAAC;QAChBiB,QAAQ,EAAEgB,eAAe,CAACP,MAAhB,CAAuBT,QADjB;QAEhBE,SAAS,EAAEc,eAAe,CAACP,MAAhB,CAAuBP;MAFlB,CAAD,CAAjB;IAID,CAV4B,CAA/B;IAYA,OAAOQ,sBAAP;EACD,CA5BQ,EA4BN,EA5BM,CAAT;;EA8BA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B7B,MAAM,CAAC8B,OAAP,CAAeC,eAAf,CAA+B;MAC7BnB,QAAQ,EAAElB,cAAc,CAACkB,QADI;MAE7BE,SAAS,EAAEpB,cAAc,CAACoB,SAFG;MAG7BkB,aAAa,EAAE,IAHc;MAI7BC,cAAc,EAAE;IAJa,CAA/B;EAMD,CAPD;;EASA,IAAMC,eAAe,GAAG;IACtBtB,QAAQ,EAAEtB,KAAF,sCAAEA,KAAK,CAAE6C,OAAT,qBAAE,eAAgBxB,GADJ;IAEtBG,SAAS,EAAExB,KAAF,uCAAEA,KAAK,CAAE6C,OAAT,qBAAE,gBAAgBtB;EAFL,CAAxB;EAIA,IAAMuB,gBAAgB,GAAG;IACvBxB,QAAQ,EAAErB,IAAF,oBAAEA,IAAI,CAAEoB,GADO;IAEvBG,SAAS,EAAEvB,IAAF,oBAAEA,IAAI,CAAEsB;EAFM,CAAzB;;EAKA,IAAI,CAACvB,KAAD,IAAU,CAACC,IAAX,IAAmB,CAACG,cAAxB,EAAwC;IACtC,OAAO,KAAC,iBAAD;MAAmB,IAAI,EAAE,OAAzB;MAAkC,KAAK,EAAC;IAAxC,EAAP;EACD;;EAED,OACE,MAAC,IAAD;IAAM,KAAK,EAAElB,MAAM,CAAC6D,SAApB;IAAA,WACE,MAAC,OAAD;MACE,GAAG,EAAErC,MADP;MAEE,KAAK,EAAE;QAAEE,KAAK,EAALA,KAAF;QAASC,MAAM,EAANA;MAAT,CAFT;MAGE,iBAAiB,MAHnB;MAIE,mBAAmB,MAJrB;MAKE,aAAa,EAAE;QACbS,QAAQ,EAAElB,cAAc,CAACkB,QADZ;QAEbE,SAAS,EAAEpB,cAAc,CAACoB,SAFb;QAGbkB,aAAa,EAAE,IAHF;QAIbC,cAAc,EAAE;MAJH,CALjB;MAAA,WAYE,KAAC,iBAAD;QACE,MAAM,EAAEvC,cADV;QAEE,WAAW,EACTJ,KAAK,CAAC0B,MAAN,KAAiB,UAAjB,GAA8BkB,eAA9B,GAAgDE,gBAHpD;QAKE,WAAW,EAAE,EALf;QAME,SAAS,EACP9C,KAAK,CAAC0B,MAAN,KAAiB,kBAAjB,GAAsC,CAACkB,eAAD,CAAtC,GAA0D,EAP9D;QASE,WAAW,EAAC,SATd;QAUE,MAAM,EAAEI,OAAO,CAACC,GAAR,CAAYC,yBAVtB;QAWE,OAAO,EAAE,iBAACC,MAAD,EAAY;UACnB5C,eAAe,CAAC4C,MAAM,CAACC,QAAR,CAAf;UACA3C,UAAU,CAAC0C,MAAM,CAACE,QAAR,CAAV;QACD;MAdH,EAZF,EA4BE,KAAC,YAAD;QAAc,IAAI,EAAErD,KAAK,CAAC6C,OAA1B;QAAmC,IAAI,EAAC;MAAxC,EA5BF,EA6BE,KAAC,YAAD;QAAc,IAAI,EAAE5C,IAApB;QAA0B,IAAI,EAAC;MAA/B,EA7BF;IAAA,EADF,EAgCE,KAAC,kBAAD;MACE,OAAO,EAAEO,OADX;MAEE,YAAY,EAAEF,YAFhB;MAGE,UAAU,EAAEiC;IAHd,EAhCF,EAqCGvC,KAAK,CAAC0B,MAAN,KAAiB,kBAAjB,IACC,KAAC,QAAD;MACE,OAAO,EAAE;QAAA,OAAMZ,UAAU,CAACwC,MAAX,EAAN;MAAA,CADX;MAEE,IAAI,EAAC,mBAFP;MAGE,IAAI,EAAE,EAHR;MAIE,KAAK,EAAC,OAJR;MAKE,KAAK,EAAE;QAAEC,GAAG,EAAE,EAAP;QAAWC,IAAI,EAAE,EAAjB;QAAqBC,QAAQ,EAAE;MAA/B;IALT,EAtCJ;EAAA,EADF;AAiDD,CApID;;AAsIA,eAAe1D,aAAf"},"metadata":{},"sourceType":"module"}